blueprint:
  name: Wake-up Light
  description: Gradually increases brightness and color temperature of a light to simulate sunrise for waking up
  domain: automation
  input:
    wake_time:
      name: Wake-up Time
      description: Time helper to start the wake-up sequence
      selector:
        entity:
          domain: input_datetime
    light_entity:
      name: Wake-up Light
      description: The light that will gradually brighten
      selector:
        entity:
          domain: light
    condition checks:
      name: Condition to check if person is in zone
      input:
        person_entity:
          name: Person Entity
          description: The person entity to check if they are home
          selector:
            entity:
              domain: person
        home_zone:
          name: Home Zone
          description: The zone entity representing home
          selector:
            entity:
              domain: zone
          default: zone.home
    transition_time:
      name: Transition Time
      description: Duration of the wake-up sequence in minutes
      default: 30
      selector:
        number:
          min: 1
          max: 120
          unit_of_measurement: minutes
          mode: slider
          step: 1
    weekday:
      name: Active Days
      description: Select the days when the wake-up light should be active
      default: 
        - mon
        - tue
        - wed
        - thu
        - fri
      selector:
        select:
          multiple: true
          options:
            - label: Monday
              value: mon
            - label: Tuesday
              value: tue
            - label: Wednesday
              value: wed
            - label: Thursday
              value: thu
            - label: Friday
              value: fri
            - label: Saturday
              value: sat
            - label: Sunday
              value: sun

# Automation configuration
alias: Gradual Wake-up Light
description: Gradually brightens a light to simulate sunrise for waking up
variables:
  # Make input my_input available as a script level variable
  light_entity: !input light_entity
  transition_time: !input transition_time
trigger:
  - platform: time
    at: !input wake_time
condition:
  - condition: time
    weekdas: !input weekday
  - condition: zone
    entity_id: !input person_entity
    zone: !input home_zone
action:
  - service: system_log.write
    data:
      message: "{{ weekdays }}"
      level: error
  - action: light.turn_on
    target:
      entity_id: !input light_entity
    data:
      brightness_pct: 10
      kelvin: 2000
  - repeat:
      sequence:
        - action: light.turn_on
          target:
            entity_id: !input light_entity
          data:
            brightness_step_pct: 1
            kelvin: >-
              {% set brightness = state_attr(light_entity, 'brightness')|default(0) %}
              {% set brightness_pct = (brightness|float / 255 * 100)|round(1) %}
              {% set kelvin = ((brightness_pct - 10) / (100 - 10) * (4000 - 2202) + 2202)|round %}
              {{ kelvin|int }}
        - delay:
            seconds: >-
              {% set total_seconds = transition_time * 60 %}
              {% set delay_per_step = (total_seconds / 90)|round %}
              {{ delay_per_step }}
      while:
        - condition: numeric_state
          entity_id: !input light_entity
          attribute: brightness
          below: 253
        - condition: state
          entity_id: !input light_entity
          state: "on"
mode: single
